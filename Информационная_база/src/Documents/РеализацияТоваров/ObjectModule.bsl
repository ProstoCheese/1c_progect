
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ОбменДанными.Загрузка Тогда
     Возврат;
	КонецЕсли;
	ЭтотОбъект.СуммаДокумента = ЭтотОбъект.Товары.Итог("Сумма");
КонецПроцедуры


 

Процедура ОбработкаПроведения(Отказ,Режим)
	
	Движения.ТоварыНаСкладах.Записывать = Истина;
	Движения.РасчетыСКлиентами.Записывать = Истина;
	
	Движение = Движения.РасчетыСКлиентами.ДобавитьПриход();
	Движение.Период = Дата;
	Движение.Контрагент = Контрагент;
	Движение.СуммаДолга = СуммаДокумента;
	
	
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц();
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РеализацияТоваровТовары.Товар КАК Товар,
	|	СУММА(РеализацияТоваровТовары.Количество) КАК Количество,
	|	РеализацияТоваровТовары.Характеристика КАК Характеристика,
	|	Сумма(Сумма) КАК Сумма
	|ПОМЕСТИТЬ ДокТЧ
	|ИЗ
	|	Документ.РеализацияТоваров.Товары КАК РеализацияТоваровТовары
	|ГДЕ
	|	РеализацияТоваровТовары.Ссылка = &Ссылка
	|СГРУППИРОВАТЬ ПО
	|	РеализацияТоваровТовары.Товар,
	|	РеализацияТоваровТовары.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокТЧ.Товар КАК Товар,
	|	ДокТЧ.Количество КАК Количество,
	|	ДокТЧ.Характеристика КАК Характеристика
	|ИЗ
	|	ДокТЧ КАК ДокТЧ";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	

	Пока Выборка.Следующий() Цикл
		Движение = Движения.ТоварыНаСкладах.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Товар = Выборка.Товар;
		Движение.ХарактеристикаТовара = Выборка.Характеристика;
		Движение.Склад = Склад;
		Движение.Количество = Выборка.Количество;
	КонецЦикла;
	
	Движения.ТоварыНаСкладах.БлокироватьДляИзменения = Истина;
	
	Движения.Записать();
	

	Запрос.Текст=
	"ВЫБРАТЬ
	|	ТоварыНаСкладахОстатки.Товар,
	|	ТоварыНаСкладахОстатки.КоличествоОстаток,
	|	ТоварыНаСкладахОстатки.ХарактеристикаТовара КАК Характеристика
	|ИЗ
	|	РегистрНакопления.ТоварыНаСкладах.Остатки(&МоментВремени, Склад = &Склад
	|	И (Товар, ХарактеристикаТовара) В
	|		(ВЫБРАТЬ
	|			ДокТЧ.Товар,
	|			ДокТЧ.Характеристика
	|		ИЗ
	|			ДокТЧ КАК ДокТЧ)) КАК ТоварыНаСкладахОстатки
	|ГДЕ
	|	ТоварыНаСкладахОстатки.КоличествоОстаток < 0";
	
	Граница = Новый Граница (МоментВремени(), ВидГраницы.Включая);
	Запрос.УстановитьПараметр("Склад", Склад);
	Запрос.УстановитьПараметр("МоментВремени", Граница);
	РезультатЗапроса = Запрос.Выполнить();
	
	Если Не РезультатЗапроса.Пустой() Тогда
		Отказ = Истина;
		
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			
		//СтрШаблон()
			Сообщить("Мало товара " + Выборка.Товар + " нужно еще " + (-Выборка.КоличествоОстаток));
			
		КонецЦикла;
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.СебестоимостьТоваров");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = Товары;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Товар","Товар" );
	
	Движения.СебестоимостьТоваров.БлокироватьДляИзменения = Истина;
	Движения.СебестоимостьТоваров.Записать(); //?

	
	Запрос.Текст = "ВЫБРАТЬ
					|	СебестоимостьТоваровОстатки.Товар КАК Товар,
					|	СебестоимостьТоваровОстатки.Партия КАК Партия,
					|	СебестоимостьТоваровОстатки.КоличествоОстаток КАК КоличествоОстаток,
					|	СебестоимостьТоваровОстатки.СтоимостьОстаток КАК СтоимостьОстаток,
					|	СебестоимостьТоваровОстатки.ХарактеристикаТовара
					|ПОМЕСТИТЬ Остатки
					|ИЗ
					|	РегистрНакопления.СебестоимостьТоваров.Остатки(&МоментВремени, (Товар, ХарактеристикаТовара) В
					|		(ВЫБРАТЬ
					|			ДокТЧ.Товар,
					|			ДокТЧ.Характеристика
					|		ИЗ
					|			ДокТЧ КАК ДокТЧ)) КАК СебестоимостьТоваровОстатки
					|;
					|
					|////////////////////////////////////////////////////////////////////////////////
					|ВЫБРАТЬ
					|	ДокТЧ.Товар КАК Товар,
					|	ДокТЧ.Количество КАК Количество,
					|	ДокТЧ.Характеристика КАК Характеристика,
					|	Остатки.ХарактеристикаТовара,
					|	ДокТЧ.Сумма КАК Выручка,
					|	Остатки.Партия КАК Партия,
					|	ЕСТЬNULL(Остатки.КоличествоОстаток, 0) КАК КоличествоОстаток,
					|	Остатки.СтоимостьОстаток КАК СтоимостьОстаток
					|ИЗ
					|	ДокТЧ КАК ДокТЧ
					|		ЛЕВОЕ СОЕДИНЕНИЕ Остатки КАК Остатки
					|		ПО ДокТЧ.Характеристика = Остатки.ХарактеристикаТовара
					|
					|УПОРЯДОЧИТЬ ПО
					|	Остатки.Партия.МоментВремени,
					|	ДокТЧ.Характеристика
					|ИТОГИ
					|	Сумма(КоличествоОстаток) КАК КоличествоОстаток,
					|	Минимум(Количество) КАК Количество
					|ПО
					|	Характеристика";
	
	
	Запрос.УстановитьПараметр("МоментВремени", МоментВремени());
	Результат = Запрос.Выполнить();
	ВыборкаТовар = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаТовар.Следующий() Цикл
		Если ВыборкаТовар.КоличествоОстаток < ВыборкаТовар.Количество Тогда

			Сообщить("Что-то пошло не так, остаток стоимости не совпадант с остатками по складу");
			Отказ = Истина;
			Возврат;
			
		КонецЕсли;
		
		ВыборкаПартия = ВыборкаТовар.Выбрать(); 
		
		ОсталосьСписать = ВыборкаТовар.Количество;
		СебестоимостьИтого = 0;
		Выручка = 0;

		Пока ВыборкаПартия.Следующий() И ОсталосьСписать <> 0 Цикл
			
			Списать = МИН(ОсталосьСписать, ВыборкаПартия.КоличествоОстаток); 
			
			
			Себестоимость = Списать / ВыборкаПартия.КоличествоОстаток * ВыборкаПартия.СтоимостьОстаток;	
			СебестоимостьИтого = СебестоимостьИтого + Себестоимость;
			Выручка = Выручка + ВыборкаПартия.Выручка;
			Товар = ВыборкаПартия.Товар;
			Движение = Движения.СебестоимостьТоваров.ДобавитьРасход();
			Движение.Период = Дата; 
			Движение.Товар = ВыборкаПартия.Товар;
			Движение.ХарактеристикаТовара = ВыборкаПартия.Характеристика;
			Движение.Партия = ВыборкаПартия.Партия;
			Движение.Количество = Списать;
			Движение.Стоимость = Себестоимость; 
			
			ОсталосьСписать = ОсталосьСписать - Списать;

			
		КонецЦикла; 
		
		
		
			Движение = Движения.Продажи.Добавить();
			Движение.Период = Дата; 
			Движение.Товар = Товар;
			Движение.Контрагент = Контрагент;
			Движение.Количество = ВыборкаТовар.Количество;
			Движение.Себестоимость = СебестоимостьИтого;
			Движение.Выручка = Выручка; // ?
			
			
			Проводка = Движения.РегистрБухгалтерии.Добавить();
			Проводка.Период = Дата;
			Проводка.СчетДт = ПланыСчетов.БухУчет.Себестоимость;
			Проводка.СчетКт = ПланыСчетов.БухУчет.Товары;
			Проводка.Сумма = СебестоимостьИтого;
			
			Проводка = Движения.РегистрБухгалтерии.Добавить();
			Проводка.Период = Дата;
			Проводка.СчетДт = ПланыСчетов.БухУчет.Клиенты;
			Проводка.СчетКт = ПланыСчетов.БухУчет.Выручка;
			Проводка.Сумма = Выручка;
			
			
		
	КонецЦикла;
	
	Движения.РегистрБухгалтерии.Записывать = Истина;
	
	Движения.Продажи.Записывать = Истина;

	Движения.СебестоимостьТоваров.Записывать = Истина;	

КонецПроцедуры



